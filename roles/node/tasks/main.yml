---
# tasks file for redis

# make a clean environment
- name: remove redis_dir
  file: path={{ redis_dir }} owner=root group=root mode=0655 state=absent
# prepare install environment
- name: mkdir for redis - config,logs,data
  file: path={{ redis_dir }}/{{ item.port }}/{{ item.type }} owner=root group=root mode=0655 state=directory
  with_items:
    - { port: "{{redis_port[0]}}", type: "config"}
    - { port: "{{redis_port[0]}}", type: "logs"}
    - { port: "{{redis_port[0]}}", type: "data"}
    - { port: "{{redis_port[1]}}", type: "config"}
    - { port: "{{redis_port[1]}}", type: "logs"}
    - { port: "{{redis_port[1]}}", type: "data"}
- name: get redis package
  get_url: url=http://download.redis.io/releases/redis-{{ version }}.tar.gz dest={{ redis_dir }}/redis-{{ version }}.tar.gz
- name: Untar redis files
  unarchive: src={{ redis_dir }}/redis-{{ version }}.tar.gz dest={{ redis_dir }} copy=no
- name: remove redis package
  file: path={{ redis_dir }}/redis-{{ version }}.tar.gz owner=root group=root mode=0655 state=absent
- name: remove redis package
  file: path={{ redis_dir }}/redis-{{ version }} owner=root group=root mode=0655 state=absent
# install redis
- name: make install
  shell: cd {{ redis_install_dir }} && make && cd {{ redis_install_src_dir }} && make PREFIX=../../ install
- name: copy redis-trib.rb
  shell: cp {{ redis_install_src_dir }}/redis-trib.rb {{ redis_bin_dir }}
- name: Create the cluster node redis.conf
  template:
    src: "redis.conf.j2"
    dest: "{{ redis_dir }}/{{ item }}/config/redis_{{ item }}.conf"
    force: true
  with_items:
    - "{{ redis_port }}"
- name: Create the cluster node redis.service1
  template:
    src: "redis.service.j2"
    dest: "/etc/init.d/redis_{{ item }}.service"
    force: true
  with_items:
    - "{{ redis_port }}"
- name: Create the cluster node redis.service2
  template:
    src: "redis.service.j2"
    dest: "/etc/init.d/redis_{{ item }}"
    force: true
  with_items:
    - "{{ redis_port }}"
- name: change mode1
  shell: chmod 755 /etc/init.d/redis_{{ item }}.service
  with_items:
    - "{{ redis_port }}"
- name: change mode2
  shell: chmod 755 /etc/init.d/redis_{{ item }}
  with_items:
    - "{{ redis_port }}"
- name: install sysv-rc-conf
  apt: name=sysv-rc-conf state=latest
- name: add services into linux
  shell: sysv-rc-conf redis_{{ item }} on && systemctl daemon-reload
  with_items:
    - "{{ redis_port }}"
- name: start and enable the redis node.
  service:
    name: redis_{{ item }}
    state: restarted
    enabled: yes
    force: true
  with_items:
    - "{{ redis_port }}"